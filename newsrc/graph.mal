(* $Id: graph.mal,v 1.3 1997/10/31 11:11:34 garrigue Exp $ *)

open Common
open Types
open Define
open Builtins
open Graphics

val id_color = new_id "color";

add_type "color" (make_ti id_color [] Kbasic);

val color = Tconstr(id_color,[]);

fun read_coords () =
  begin
    val status = wait_next_event [Button_down];
    (status.mouse_x, status.mouse_y)
  end;

List.iter add_builtin
  [ ("open_graph", Obj.repr (fn () => open_graph ""), arr unit unit),
    ("close_graph", Obj.repr close_graph, arr unit unit),
    ("clear_graph", Obj.repr clear_graph, arr unit unit),
    ("size_x", Obj.repr size_x, arr unit int),
    ("size_y", Obj.repr size_y, arr unit int),
    ("set_color", Obj.repr set_color, arr color unit),
    ("rgb", Obj.repr rgb, arr2 int int (arr int color)),
    ("black", Obj.repr black, color),
    ("white", Obj.repr white, color),
    ("red", Obj.repr red, color),
    ("green", Obj.repr green, color),
    ("blue", Obj.repr blue, color),
    ("yellow", Obj.repr yellow, color),
    ("cyan", Obj.repr cyan, color),
    ("magenta", Obj.repr magenta, color),
    ("plot", Obj.repr plot, arr2 int int unit),
    ("moveto", Obj.repr moveto, arr2 int int unit),
    ("current_point", Obj.repr current_point, arr unit (Ttuple[int,int])),
    ("lineto", Obj.repr lineto, arr2 int int unit),
    ("set_line_width", Obj.repr set_line_width, arr int unit),
    ("draw_string", Obj.repr (fn s => draw_string (Misc.string_of_array s)),
     arr string unit),
    ("set_font", Obj.repr (fn s => set_font (Misc.string_of_array s)),
     arr string unit),
    ("set_font_size", Obj.repr set_text_size, arr int unit),
    ("fill_rect", Obj.repr fill_rect, arr2 int int (arr2 int int unit)),
    ("read_point", Obj.repr read_coords, arr unit (Ttuple[int,int])),
    ("key_pressed", Obj.repr key_pressed, arr unit bool),
    ("read_key", Obj.repr read_key, arr unit char),
    ("sound", Obj.repr sound, arr2 int int unit) ]
;

add_handler
  (fn exn =>
    case exn of
      Graphic_failure s =>
	prerr_endline ("> Graphics error : " ^ s ^ ".");
	true
    | _ => false
    end)
;
